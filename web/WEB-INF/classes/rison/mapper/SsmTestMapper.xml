<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="rison.dao.SsmTestMapper" >
  <resultMap id="BaseResultMap" type="rison.model.SsmTest" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="pass" property="pass" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="date" property="date" jdbcType="VARCHAR" />
    <result column="count" property="count" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, pass, num, date, count
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ssmtest
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ssmtest
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="rison.model.SsmTest" >
    insert into ssmtest (id, name, pass, 
      num, date, count)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{pass,jdbcType=VARCHAR}, 
      #{num,jdbcType=INTEGER}, #{date,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="rison.model.SsmTest" >
    insert into ssmtest
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="pass != null" >
        pass,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="count != null" >
        count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="pass != null" >
        #{pass,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="date != null" >
        #{date,jdbcType=VARCHAR},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="rison.model.SsmTest" >
    update ssmtest
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="pass != null" >
        pass = #{pass,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=VARCHAR},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="rison.model.SsmTest" >
    update ssmtest
    set name = #{name,jdbcType=VARCHAR},
      pass = #{pass,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      date = #{date,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--查询全部，id对应SsmTestMapper.java中的getALL()方法，resultMap对应该文件最上面的resultMap-->
  <select id="getAll" resultMap="BaseResultMap">
    SELECT * FROM ssmtest
  </select>

  <update id="doUpDateById" parameterType="rison.model.SsmTest" >
    update ssmtest
    set name = #{name,jdbcType=VARCHAR},
    pass = #{pass,jdbcType=VARCHAR},
    num = #{num,jdbcType=INTEGER},
    date = #{date,jdbcType=VARCHAR},
    count = #{count,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>